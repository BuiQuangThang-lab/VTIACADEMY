DROP DATABASE IF EXISTS inputtesting ;
CREATE DATABASE IF NOT EXISTS inputtesting;
USE inputtesting;
-- TABLE 1
DROP TABLE IF EXISTS Department; 
CREATE TABLE Department(
   DepartmentID      TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
   DepartmentName    VARCHAR(50) UNIQUE NOT NULL
);
-- TABLE 2
DROP TABLE IF EXISTS `Position`;
CREATE TABLE `Position` (
   PositionID       TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
   PositionName     VARCHAR(50) UNIQUE NOT NULL
);
-- TABLE 3
DROP TABLE IF EXISTS `Account`;
CREATE TABLE `Account`(
   AccountID        SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
   Email            VARCHAR(50) UNIQUE,
   UserName         VARCHAR(50) NOT NULL,
   FullName         VARCHAR(50) NOT NULL,
   DepartmentID     TINYINT UNSIGNED NOT NULL,
   PositionID       TINYINT UNSIGNED NOT NULL,
   CreateDate       DATE DEFAULT (CURRENT_DATE),
   
   FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
   FOREIGN KEY (PositionID) REFERENCES `Position`(PositionID)
);
-- TABLE 4
DROP TABLE IF EXISTS `Group`;
CREATE TABLE `Group`(
  GroupID            TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  GroupName          VARCHAR(50) UNIQUE NOT NULL,
  CreatorID          TINYINT UNSIGNED NOT NULL,
  CreateDate         DATE DEFAULT (CURRENT_DATE)
);
-- TABLE 5
DROP TABLE IF EXISTS GroupAccount;
CREATE TABLE GroupAccount(
  GroupID            TINYINT UNSIGNED AUTO_INCREMENT  NOT NULL,
  AccountID          SMALLINT UNSIGNED  NOT NULL,
  joinDate           DATE DEFAULT (CURRENT_DATE),
  UNIQUE(GroupID,AccountID),
  FOREIGN KEY (GroupID) REFERENCES `Group`(GroupID),
  FOREIGN KEY (AccountID) REFERENCES `Account`(AccountID)
);
-- TABLE 6
DROP TABLE IF EXISTS TypeQuestion;
CREATE TABLE TypeQuestion(
 TypeID                TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 TypeName              ENUM('Essay', 'Multiple-Choice')
);
-- TABLE 7
DROP TABLE IF EXISTS CategoryQuestion;
CREATE TABLE CategoryQuestion(
 CategoryID             TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 CategoryNAme           VARCHAR(50) UNIQUE NOT NULL
);
-- TABLE 8
DROP TABLE IF EXISTS Question;
CREATE TABLE Question(
 QuestionID               SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 Content                  TEXT NOT NULL,
 CategoryID               TINYINT UNSIGNED NOT NULL,
 TypeID                   TINYINT UNSIGNED  NOT NULL,
 CreatorID                TINYINT UNSIGNED NOT NULL,
 CreateDate               DATE DEFAULT (CURRENT_DATE),
 FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion(CategoryID),
 FOREIGN KEY (TypeID) REFERENCES TypeQuestion(TypeID)
 );
 -- TABLE 9
 DROP TABLE IF EXISTS Answer;
CREATE TABLE Answer(
 AnswerID                SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 Content                 TEXT NOT NULL,
 QuestionID              SMALLINT UNSIGNED NOT NULL,
 isCorrect               VARCHAR(50),
 FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID)
);
-- TABLE 10
DROP TABLE IF EXISTS Exam;
CREATE TABLE Exam(
 ExamID         TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
 Codes          TINYINT UNSIGNED  NOT NULL,
 Title          TEXT NOT NULL,
 CategoryID     TINYINT UNSIGNED  NOT NULL,
 Duration       DATETIME NOT NULL,
 CreatorID      TINYINT UNSIGNED  NOT NULL,
 CreateDate     DATE DEFAULT (CURRENT_DATE),
 FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion(CategoryID)

);
-- TABLE 11
DROP TABLE IF EXISTS ExamQuestion;
CREATE TABLE ExamQuestion(
 ExamID          TINYINT UNSIGNED AUTO_INCREMENT NOT NULL,
 QuestionID      SMALLINT UNSIGNED NOT NULL,
 FOREIGN KEY (ExamID) REFERENCES Exam(ExamID),
 FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID)

);
